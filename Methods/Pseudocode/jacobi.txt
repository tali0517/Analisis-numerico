Jacobi 

read: A(square matrix), b(vector same length as A), tol, x0, nmax
count = 0 
dispersion = tolerancia+1 
while(dispersion>tol and count < nmax) do: 
    x1 = *(function newjacobi(x0)
    dispersion = norm(x1-x0) 
    x0 = x1
    count++ 
end while

if dispersion < tol: 
    return x1 is an approximation with a tolerance of {tol} 
else
    return Method failed after {count} iterations. 


function newjacobi(x0)
for i = 1 to n do: 
    sum = 0
    for j = 1 to n do: 
	if j != i do:
	    suma = suma + a(i,j)*x0
	end if 
    end for
    x(1)  = (b-suma)/diag(a) 
