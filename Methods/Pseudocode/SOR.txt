SOR 

function sor: 
read: A(square matrix), b(vector same length as A), omega, tol, x0, nmax
count = 0 
dispersion = tolerancia+1 
while(dispersion>tol and count < nmax) do: 
    x1 = *(function sor(x0,omega)
    dispersion = (norm(x1-x0)/norm(x1)) 
    x0 = x1
    count++ 
end while

if dispersion < tol: 
    return x1 is an approximation with a tolerance of {tol} 
else
    return Method failed after {count} iterations. 


function sor:
    read x0,omega  
    for i = 1 to n do: 
	x(1) = x0
    end for 
    for i=1 to n do: 
	sum = 0
	for i=1 to n do: 
	    if j != i then:
		suma = suma + a(i,j)*xj
	    end if 
	end for 
	xi = (1-omega)xi+(omega/diag(A))*(bi - suma)

    end for
    return x
end function 


