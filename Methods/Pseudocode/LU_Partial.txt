function [L, A, P]=factorizationLUPivPar(A)
 	n=length(A(1,:))
 	L=zeros(n,n)
 	P=eye(n,n)
 	for k=1 : n-1
 	   p = search_max(A(k:n,k)) + k -1
 	   [A] = switch(A,k,p)
 	   [L] = switch(L,k,p)
 	   [P] = switch(P,k,p)
 	   L(k:n,k) = A(k:n,k)/A(k,k)
 	   A(k+1:n,:)=A(k+1:n,:)-L(k+1:n,k)*A(k,:)
 	end
 	U=A
  	L(n,n)=1
endfunction

function [indx]=search_max(v)
	v = abs(v)
	l = find(v==max(v))
 	indx = l(1,1);
endfunction

function [A]=switch(A, i, j)
 	aux = A(i,:)
	A(i,:) = A(j,:)
	A(j,:) = aux
endfunction